C251 COMPILER V5.60.0,  isr                                                                18/06/23  13:19:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\isr.c XSMALL WARNINGLEVEL(0) BROWSE INCDIR(..\..\Libraries
                    -\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\..\
                    -..\DIANCI;..\..\..\..\18--------) DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          //ADCIF：ADC_DMA 中断请求标志位，当 ADC_DMA 完成扫描所有使能的 ADC 通道后后，硬件自动将
   20          //ADCIF 置 1，若使能 ADC_DMA 中断则进入中断服务程序。标志位需软件清零
   21          #include "headfile.h"
   22          int f=0;
   23          //UART1中断
   24          void UART1_Isr() interrupt 4
   25          {
   26   1          uint8 res;
   27   1        static uint8 dwon_count;
   28   1          if(UART1_GET_TX_FLAG)
   29   1          {
   30   2              UART1_CLEAR_TX_FLAG;
   31   2              busy[1] = 0;
   32   2          }
   33   1          if(UART1_GET_RX_FLAG)
   34   1          {
   35   2              UART1_CLEAR_RX_FLAG;
   36   2              res = SBUF;
   37   2              //程序自动下载
   38   2              if(res == 0x7F)
   39   2              {
   40   3                  if(dwon_count++ > 20)
   41   3                      IAP_CONTR = 0x60;
   42   3              }
   43   2              else
   44   2              {
   45   3                  dwon_count = 0;
   46   3              }
   47   2          }
   48   1      }
   49          
   50          //UART2中断
   51          void UART2_Isr() interrupt 8
   52          {
   53   1          if(UART2_GET_TX_FLAG)
   54   1        {
   55   2              UART2_CLEAR_TX_FLAG;
C251 COMPILER V5.60.0,  isr                                                                18/06/23  13:19:29  PAGE 2   

   56   2          busy[2] = 0;
   57   2        }
   58   1          if(UART2_GET_RX_FLAG)
   59   1        {
   60   2              UART2_CLEAR_RX_FLAG;
   61   2          //接收数据寄存器为：S2BUF
   62   2      
   63   2        }
   64   1      }
   65          
   66          
   67          //UART3中断
   68          void UART3_Isr() interrupt 17
   69          {
   70   1          if(UART3_GET_TX_FLAG)
   71   1        {
   72   2              UART3_CLEAR_TX_FLAG;
   73   2          busy[3] = 0;
   74   2        }
   75   1          if(UART3_GET_RX_FLAG)
   76   1        {
   77   2              UART3_CLEAR_RX_FLAG;
   78   2          //接收数据寄存器为：S3BUF
   79   2      
   80   2        }
   81   1      }
   82          
   83          
   84          //UART4中断
   85          void UART4_Isr() interrupt 18
   86          {
   87   1          if(UART4_GET_TX_FLAG)
   88   1        {
   89   2              UART4_CLEAR_TX_FLAG;
   90   2          busy[4] = 0;
   91   2        }
   92   1          if(UART4_GET_RX_FLAG)
   93   1        {
   94   2              UART4_CLEAR_RX_FLAG;
   95   2      
   96   2          //接收数据寄存器为：S4BUF;
   97   2          if(wireless_type == WIRELESS_SI24R1)
   98   2              {
   99   3                  wireless_uart_callback();           //无线转串口回调函数
  100   3              }
  101   2              else if(wireless_type == WIRELESS_CH9141)
  102   2              {
  103   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  104   3              }
  105   2              else if(wireless_type == WIRELESS_CH573)
  106   2              {
  107   3                  wireless_ch573_callback();          //CH573无线模块回调函数
  108   3              }
  109   2        }
  110   1      }
  111          
  112          #define LED P52
  113          void INT0_Isr() interrupt 0
  114          {
  115   1      //  do{
  116   1      //    delay_ms(10);
  117   1      //  }while(P32==0);
  118   1      //  if(P32==1){
  119   1      //   if(duty >= 750||f==1)
  120   1      //    {
  121   1      //      f=1;
C251 COMPILER V5.60.0,  isr                                                                18/06/23  13:19:29  PAGE 3   

  122   1      //      duty -=50 ;
  123   1      //      if(duty<=0) f=0;
  124   1      //    }
  125   1      //    else duty += 50;
  126   1        
  127   1      //  }
  128   1        INT0_CLEAR_FLAG;  //清除中断标志
  129   1          
  130   1      }
  131            
  132          
  133          void INT1_Isr() interrupt 2
  134          {
  135   1      
  136   1      }
  137          void INT2_Isr() interrupt 10
  138          {
  139   1        INT2_CLEAR_FLAG;  //清除中断标志
  140   1      }
  141          void INT3_Isr() interrupt 11
  142          {
  143   1        INT3_CLEAR_FLAG;  //清除中断标志
  144   1      }
  145          
  146          void INT4_Isr() interrupt 16
  147          {
  148   1        INT4_CLEAR_FLAG;  //清除中断标志
  149   1      }
  150          
  151          void TM0_Isr() interrupt 1
  152          {
  153   1      
  154   1      }
  155          void TM1_Isr() interrupt 3
  156          {
  157   1      
  158   1      }
  159          void TM2_Isr() interrupt 12
  160          {
  161   1        TIM2_CLEAR_FLAG;  //清除中断标志
  162   1        
  163   1      }
  164          void TM3_Isr() interrupt 19
  165          {
  166   1        TIM3_CLEAR_FLAG; //清除中断标志
  167   1        
  168   1      }
  169          
  170          void TM4_Isr() interrupt 20
  171          {
  172   1        TIM4_CLEAR_FLAG; //清除中断标志
  173   1      //  ccd_collect();   //CCD采集数据
  174   1      
  175   1      }
  176          //========================================================================
  177          // 函数: DMA_ADC_ISR_Handler
  178          // 描述: DMA ADC 中断函数.
  179          // 参数: none.
  180          // 返回: none.
  181          // 版本: V1.0, 2022-03-23
  182          //========================================================================
  183          void DMA_ADC_ISR_Handler (void) interrupt 48
  184          {
  185   1        // TODO: 在此处添加用户代码
  186   1        if(DMA_ADC_STA & 0x01)  //AD转换完成
  187   1        {
C251 COMPILER V5.60.0,  isr                                                                18/06/23  13:19:29  PAGE 4   

  188   2          DMA_ADC_STA &= ~0x01; //清标志位
  189   2          DmaADCFlag = 1;
  190   2          pooled_data();
  191   2          
  192   2        }
  193   1      }
  194          
  195          //========================================================================
  196          // 函数: DMA_ISR_Handler
  197          // 描述: DMA中断函数.
  198          // 参数: none.
  199          // 返回: none.
  200          // 版本: V1.0, 2021-05-25
  201          //========================================================================
  202          void DMA_ISR_Handler (void) interrupt 13
  203          {
  204   1        // TODO: 在此处添加用户代码
  205   1        
  206   1        //----------- DMA ADC --------------
  207   1        if(DMA_ADC_STA & 0x01)  //AD转换完成
  208   1        {
  209   2          DMA_ADC_STA &= ~0x01; //清标志位
  210   2          DmaADCFlag = 1;
  211   2          pooled_data();
  212   2          
  213   2        }
  214   1      }
  215          
  216          //void  INT0_Isr()  interrupt 0;
  217          //void  TM0_Isr()   interrupt 1;
  218          //void  INT1_Isr()  interrupt 2;
  219          //void  TM1_Isr()   interrupt 3;
  220          //void  UART1_Isr() interrupt 4;
  221          //void  ADC_Isr()   interrupt 5;
  222          //void  LVD_Isr()   interrupt 6;
  223          //void  PCA_Isr()   interrupt 7;
  224          //void  UART2_Isr() interrupt 8;
  225          //void  SPI_Isr()   interrupt 9;
  226          //void  INT2_Isr()  interrupt 10;
  227          //void  INT3_Isr()  interrupt 11;
  228          //void  TM2_Isr()   interrupt 12;
  229          //void  INT4_Isr()  interrupt 16;
  230          //void  UART3_Isr() interrupt 17;
  231          //void  UART4_Isr() interrupt 18;
  232          //void  TM3_Isr()   interrupt 19;
  233          //void  TM4_Isr()   interrupt 20;
  234          //void  CMP_Isr()   interrupt 21;
  235          //void  I2C_Isr()   interrupt 24;
  236          //void  USB_Isr()   interrupt 25;
  237          //void  PWM1_Isr()  interrupt 26;
  238          //void  PWM2_Isr()  interrupt 27;
  239          
  240          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       425     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         3     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
C251 COMPILER V5.60.0,  isr                                                                18/06/23  13:19:29  PAGE 5   

  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
