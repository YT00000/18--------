C251 COMPILER V5.60.0,  PID                                                                11/06/23  21:41:49  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN .\Out_File\PID.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\PID.c XSMALL WARNINGLEVEL(3) BROWSE INCDIR(..\..\Libraries
                    -\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\..\
                    -..\DIANCI;..\..\..\..\18--------) DEBUG PRINT(.\Out_File\PID.lst) TABS(2) OBJECT(.\Out_File\PID.obj) 

stmt  level    source

    1          #include "PID.h"
    2          
    3          PIDL_Type_Def  pid_LL;
    4          PIDR_Type_Def  pid_RR;
    5          /*************************************************************************
    6           *  函数名称：float constrain_float(float amt, float low, float high)
    7           *  功能说明：限幅函数
    8           *  参数说明：
    9            * @param    amt   ： 参数
   10            * @param    low   ： 最低值
   11            * @param    high  ： 最高值
   12           *  函数返回：无
   13           *  修改时间：2020年4月1日
   14           *  备    注：
   15           *************************************************************************/
   16          float constrain_float(float amt, float low, float high)
   17          {
   18   1        return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
   19   1      }
   20          /************************************************
   21          函数名称：PIDL_Init(PIDL_Type_Def *PIDL)
   22          功    能：初始化PIDL参数
   23          参    数：PIDL_Type_Def *PIDL
   24          返 回 值：无
   25          *************************************************/
   26          void PIDL_Init(PIDL_Type_Def *PIDL)
   27          {
   28   1           PIDL->Kp =0;
   29   1           PIDL->Ki =0;
   30   1           PIDL->Kd =0;
   31   1           PIDL->out_p =0; //Kp输出
   32   1           PIDL->out_i =0; //Ki输出
   33   1           PIDL->out_d =0; //Kd输出
   34   1           PIDL->out =0;   //pid输出
   35   1           PIDL->integrator =0; //积分值
   36   1           PIDL->limit =0;//积分限幅
   37   1           PIDL->error =0;      //当前偏差
   38   1           PIDL->last_error =0; //上次误差
   39   1           PIDL->last_derivative =0; //上次误差与上上次误差之差
   40   1      }
   41          /************************************************
   42          函数名称：PIDR_Init(PIDR_Type_Def *PIDR)
   43          功    能：初始化PIDR参数
   44          参    数：PIDR_Type_Def *PIDL
   45          返 回 值：无
   46          *************************************************/
   47          void PIDR_Init(PIDR_Type_Def *PIDR)
   48          {
   49   1           PIDR->Kp =0;
   50   1           PIDR->Ki =0;
   51   1           PIDR->Kd =0;
   52   1           PIDR->out_p =0; //Kp输出
   53   1           PIDR->out_i =0; //Ki输出
   54   1           PIDR->out_d =0; //Kd输出
   55   1           PIDR->out =0;   //pid输出
   56   1           PIDR->integrator =0; //积分值
   57   1           PIDR->limit =0;//积分限幅
C251 COMPILER V5.60.0,  PID                                                                11/06/23  21:41:49  PAGE 2   

   58   1           PIDR->error =0;      //当前偏差
   59   1           PIDR->last_error =0; //上次误差
   60   1           PIDR->last_derivative =0; //上次误差与上上次误差之差
   61   1      }
   62          
   63          //pwm=Kp*e(k)+Ki*∑e(k)+Kd[e（k）-e(k-1)]
   64          /************************************************
   65          函数名称 ： PID_Loc(float SetValue,float ActualValue,PIDL_Type_Def *PIDL)
   66          功    能 ： 位置式PID
   67          参    数 ： SetValue ------ 设置值(期望值)
   68                      ActualValue --- 实际值(反馈值)
   69                      PID ----------- PID数据结构
   70          返 回 值 ： PIDL->out -------- 输出
   71          *************************************************/
   72          float PIDL_Loc(float error_L,PIDL_Type_Def *PIDL)
   73          {
   74   1              PIDL->error = error_L;                                           //现在误差
   75   1              PIDL->integrator += PIDL->error;                                                //误差累积       
   76   1              PIDL->integrator = PIDL->integrator > PIDL->limit?PIDL->limit:PIDL->integrator; //积分限幅
   77   1              PIDL->last_derivative = PIDL->error - PIDL->last_error;
   78   1              PIDL->out_p = PIDL->Kp *  PIDL->error;                                          //Kp输出
   79   1              PIDL->out_i = PIDL->Ki *  PIDL->integrator;                                     //Ki输出
   80   1              PIDL->out_d = PIDL->Kd *  PIDL->last_derivative;                                //Kd输出
   81   1              PIDL->last_error = PIDL->error;                                                 //保存上一次偏差
   82   1              PIDL->out =PIDL->out_p + PIDL->out_i + PIDL->out_d;                             //输出
   83   1        //限制
   84   1              if(PIDL->out > Servo_max)
   85   1          {
   86   2            PIDL->out =  Servo_max;
   87   2          }
   88   1          else if(PIDL->out< Servo_min)
   89   1          {
   90   2            PIDL->out =  Servo_min;
   91   2          }
   92   1             return PIDL->out ; 
   93   1        
   94   1        
   95   1      }
   96          float PIDR_Loc(float error_R,PIDR_Type_Def *PIDR)
   97          {
   98   1              PIDR->error = error_R;                                           //现在误差
   99   1              PIDR->integrator += PIDR->error;                                                //误差累积       
  100   1              PIDR->integrator = PIDR->integrator > PIDR->limit?PIDR->limit:PIDR->integrator; //积分限幅
  101   1              PIDR->last_derivative = PIDR->error - PIDR->last_error;
  102   1              PIDR->out_p = PIDR->Kp *  PIDR->error;                                          //Kp输出
  103   1              PIDR->out_i = PIDR->Ki *  PIDR->integrator;                                     //Ki输出
  104   1              PIDR->out_d = PIDR->Kd *  PIDR->last_derivative;                                //Kd输出
  105   1              PIDR->last_error = PIDR->error;                                                 //保存上一次偏差
  106   1              PIDR->out =PIDR->out_p + PIDR->out_i + PIDR->out_d;                             //输出
  107   1        //限制
  108   1              if(PIDR->out > Servo_max)
  109   1          {
  110   2            PIDR->out =  Servo_max;
  111   2          }
  112   1          else if(PIDR->out < Servo_min)
  113   1          {
  114   2            PIDR->out =  Servo_min;
  115   2          }
  116   1             return PIDR->out ; 
  117   1        
  118   1        
  119   1      }
  120          //pwm+=Kp[e（k）-e(k-1)]+Ki*e(k)+Kd[e(k)-2e(k-1)+e(k-2)]
  121          /************************************************
  122          函数名称 ： PID_Inc
  123          功    能 ： 增量式PID
C251 COMPILER V5.60.0,  PID                                                                11/06/23  21:41:49  PAGE 3   

  124          参    数 ： SetValue ------ 设置值(期望值)
  125                      ActualValue --- 实际值(反馈值)
  126                      PID ----------- PID数据结构
  127          返 回 值 ： PIDL->out -------- 本次PID增量(+/-)
  128          *************************************************/
  129          float PIDL_Inc(float error_L, PIDL_Type_Def *PIDL)
  130          {
  131   1          
  132   1       
  133   1          PIDL->error = error_L;                                  //计算当前偏差  
  134   1          PIDL->last_derivative = PIDL->error - PIDL->last_error;
  135   1          PIDL->out_p = PIDL->Kp * PIDL->last_derivative;
  136   1          PIDL->out_i = PIDL->Ki * PIDL->error;
  137   1          PIDL->out_d = PIDL->Kd * (PIDL->error - 2*PIDL->last_error +  PIDL->last_last_error); 
  138   1          PIDL->out = PIDL->out_p + PIDL->out_i + PIDL->out_d;                    //增量式PID控制器    
  139   1        
  140   1          PIDL->last_last_error = PIDL->last_error;
  141   1          PIDL->last_error =PIDL->error;
  142   1          //在motor中PID调用时进行了限幅         
  143   1      
  144   1          return PIDL->out;
  145   1      }
  146          
  147          float PIDR_Inc(float error_R, PIDR_Type_Def *PIDR)
  148          {
  149   1          
  150   1       
  151   1          PIDR->error = error_R;                                  //计算当前偏差  
  152   1          PIDR->last_derivative = PIDR->error - PIDR->last_error;
  153   1          PIDR->out_p = PIDR->Kp * PIDR->last_derivative;
  154   1          PIDR->out_i = PIDR->Ki * PIDR->error;
  155   1          PIDR->out_d = PIDR->Kd * (PIDR->error - 2*PIDR->last_error +  PIDR->last_last_error); 
  156   1          PIDR->out = PIDR->out_p + PIDR->out_i + PIDR->out_d;                    //增量式PID控制器    
  157   1        
  158   1          PIDR->last_last_error = PIDR->last_error;
  159   1          PIDR->last_error =PIDR->error;
  160   1      
  161   1        //在motor中PID调用时进行了限幅 
  162   1      
  163   1          return PIDR->out;
  164   1      }
  165          
  166          
  167          
  168          
  169          
  170          
  171          
  172          
  173          
  174          
  175          
  176          
  177          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1282     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       112          4
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  PID                                                                11/06/23  21:41:49  PAGE 4   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
