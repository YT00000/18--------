C251 COMPILER V5.60.0,  encoder                                                            20/06/23  00:03:58  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\encoder.c XSMALL WARNINGLEVEL(0) BROWSE INCDIR(..\..\Libra
                    -ries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..
                    -\..\..\DIANCI;..\..\..\..\18--------) DEBUG PRINT(.\Out_File\encoder.lst) TABS(2) OBJECT(.\Out_File\encoder.obj) 

stmt  level    source

    1          /*
    2           * @Author: lanchanghai
    3           * @Date: 2023-06-09 22:32:02
    4           * @LastEditors: lanchanghai
    5           * @LastEditTime: 2023-06-11 00:27:03
    6           * @FilePath: \DIANCI\Project\USER\src\encoder.c
    7           */
    8          #include "headfile.h"
    9          
   10          
   11          int16 templ_pluse = 0;
   12          int16 tempr_pluse = 0;
   13          /*¶ÔÓÚ CTIM0_P34£¬Ñ¡Ôñ¶¨Ê±Æ÷0ºÍÒý½ÅP3.4£¬²¢ÉèÖÃ¶¨Ê±Æ÷0µÄTL0ºÍTH0¼Ä´æÆ÷Îª0£¬½«TMOD¼Ä´æÆ÷µÄµÚ2Î»ÉèÖÃÎª1£¬±í
             -Ê¾Ñ¡ÔñÍâ²¿¼ÆÊýÄ£Ê½£¬×îºóÆô¶¯¶¨Ê±Æ÷0¡£
   14          
   15          ¶ÔÓÚ CTIM1_P35£¬Ñ¡Ôñ¶¨Ê±Æ÷1ºÍÒý½ÅP3.5£¬²¢ÉèÖÃ¶¨Ê±Æ÷1µÄTL1ºÍTH1¼Ä´æÆ÷Îª0£¬½«TMOD¼Ä´æÆ÷µÄµÚ6Î»ÉèÖÃÎª1£¬±íÊ¾
             -Ñ¡ÔñÍâ²¿¼ÆÊýÄ£Ê½£¬×îºóÆô¶¯¶¨Ê±Æ÷1¡£
   16          
   17          ¶ÔÓÚ CTIM2_P12£¬Ñ¡Ôñ¶¨Ê±Æ÷2ºÍÒý½ÅP1.2£¬²¢ÉèÖÃ¶¨Ê±Æ÷2µÄT2LºÍT2H¼Ä´æÆ÷Îª0£¬½«AUXR¼Ä´æÆ÷µÄµÚ3¡¢4Î»ÉèÖÃÎª1£¬±
             -íÊ¾Ñ¡ÔñÍâ²¿¼ÆÊýÄ£Ê½£¬²¢Æô¶¯¶¨Ê±Æ÷2¡£
   18          
   19          ¶ÔÓÚ CTIM3_P04£¬Ñ¡Ôñ¶¨Ê±Æ÷3ºÍÒý½ÅP0.4£¬²¢ÉèÖÃ¶¨Ê±Æ÷3µÄT3LºÍT3H¼Ä´æÆ÷Îª0£¬½«T4T3M¼Ä´æÆ÷µÄµÚ2¡¢3Î»ÉèÖÃÎª1£¬
             -±íÊ¾Ñ¡ÔñÍâ²¿¼ÆÊýÄ£Ê½£¬²¢Æô¶¯¶¨Ê±Æ÷3¡£
   20          
   21          ¶ÔÓÚ CTIM4_P06£¬Ñ¡Ôñ¶¨Ê±Æ÷4ºÍÒý½ÅP0.6£¬²¢ÉèÖÃ¶¨Ê±Æ÷4µÄT4LºÍT4H¼Ä´æÆ÷Îª0£¬½«T4T3M¼Ä´æÆ÷µÄµÚ6¡¢7Î»ÉèÖÃÎª1£¬
             -±íÊ¾Ñ¡ÔñÍâ²¿¼ÆÊýÄ£Ê½£¬²¢Æô¶¯¶¨Ê±Æ÷4¡£
   22          
   23          ¸Ãº¯ÊýµÄÄ¿µÄÊÇ¸ù¾Ý´«ÈëµÄ²ÎÊýÑ¡ÔñºÏÊÊµÄ¶¨Ê±Æ÷ºÍÒý½Å£¬²¢½øÐÐ³õÊ¼»¯ºÍÆô¶¯²Ù×÷£¬ÒÔ±ãºóÐøÊ¹ÓÃÍâ²¿¼ÆÊý¹¦ÄÜ*/
   24          //´ø·½Ïò±àÂëÆ÷¿ÉÒÔÖ±½ÓÓÃ¿âº¯Êý
   25          //-------------------------------------------------------------------------------------------------------
             -------------
   26          //  @brief      ±àÂëÆ÷³õÊ¼»¯
   27          //  @param       tim_n           Ñ¡ÔñÄ£¿é
   28          //  @return     
   29          //  Sample usage:            
   30          //-------------------------------------------------------------------------------------------------------
             -------------
   31          
   32          void encoder_Init(void)
   33          {
   34   1           ctimer_count_init(SPEEDL_PLUSE);//¶¨Ê±Æ÷³õÊ¼»¯×÷ÎªÍâ²¿¼ÆÊý,³õÊ¼»¯¶¨Ê±Æ÷0£¬Íâ²¿ÊäÈëÎªP3.4Òý½Å
   35   1         ctimer_count_init(SPEEDR_PLUSE);//³õÊ¼»¯¶¨Ê±Æ÷3×÷ÎªÍâ²¿¼ÆÊý
   36   1      
   37   1      }
   38          //-------------------------------------------------------------------------------------------------------
             -------------
   39          //  @brief      ±àÂëÆ÷¶ÁÊý¾Ý
   40          //  @param      datl           Êý¾Ý
   41          //  @return     uint16      ·µ»Ø¼ÆÊýÖµ
   42          //  Sample usage:           num = ctimer_count_read(CTIM0_P34);     
   43          //-------------------------------------------------------------------------------------------------------
             -------------
   44          
   45          int16 Read_encoderL(void)
   46          {
   47   1          int16 datl;
   48   1          if(DIL == 1)
C251 COMPILER V5.60.0,  encoder                                                            20/06/23  00:03:58  PAGE 2   

   49   1          {
   50   2            datl = ctimer_count_read(SPEEDL_PLUSE);
   51   2          }
   52   1          else
   53   1          {
   54   2            datl = ctimer_count_read(SPEEDL_PLUSE) * -1;
   55   2          }
   56   1           return datl; 
   57   1      }
   58          int16 Read_encoderR(void)
   59          {
   60   1         int16 datr;
   61   1        if(DIR == 1)
   62   1          {
   63   2            datr = ctimer_count_read(SPEEDR_PLUSE );
   64   2          }
   65   1          else
   66   1          {
   67   2            datr = ctimer_count_read(SPEEDR_PLUSE ) * -1;
   68   2          }
   69   1           return datr; 
   70   1      }
   71          //-------------------------------------------------------------------------------------------------------
             -------------
   72          //  @brief      ±àÂëÆ÷Çå³ýÊý¾Ý
   73          //  @param      datl           Êý¾Ý
   74          //  @return     uint16      ·µ»Ø¼ÆÊýÖµ
   75          //  Sample usage:           num = ctimer_count_read(CTIM0_P34);     
   76          //-------------------------------------------------------------------------------------------------------
             -------------
   77          
   78          void clean_encoder(void)
   79          {
   80   1        ctimer_count_clean(SPEEDL_PLUSE);
   81   1        ctimer_count_clean(SPEEDR_PLUSE);
   82   1      }
   83          //-------------------------------------------------------------------------------------------------------
             -------------
   84          //  @brief      Ê¹ÓÃ±àÂëÆ÷
   85          //  @param      datl           Êý¾Ý
   86          //  @return     uint16      ·µ»Ø¼ÆÊýÖµ
   87          //  Sample usage:          ±àÂëÆ÷³ÌÐò²âÊÔ  Use_encoderL();  
   88          //-------------------------------------------------------------------------------------------------------
             -------------
   89          void Use_encoderL(void)
   90          {
   91   1         templ_pluse=0;
   92   1         tempr_pluse=0;
   93   1           encoder_Init();
   94   1         delay_ms(200);//200ms¼ÆÊýÊ±¼ä£¬Ò²ÊÇÈÃÆäÍêÈ«³õÊ¼»¯£¬²»ÒªÉ¾³ý£¬²»È»»á²»ºÃÊ¹
   95   1           templ_pluse = Read_encoderL();
   96   1         tempr_pluse = Read_encoderR();
   97   1         printf("templ_pluse = %d\r\n", templ_pluse);
   98   1         
   99   1         printf("tempr_pluse = %d\r\n", tempr_pluse);
  100   1         
  101   1         clean_encoder();
  102   1      }
  103          
  104          
  105          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       171     ------
  ecode size           =    ------     ------
C251 COMPILER V5.60.0,  encoder                                                            20/06/23  00:03:58  PAGE 3   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         4     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        50     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
