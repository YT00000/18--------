C251 COMPILER V5.60.0,  adc                                                                20/06/23  00:03:58  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE adc
OBJECT MODULE PLACED IN .\Out_File\adc.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\adc.c XSMALL WARNINGLEVEL(0) BROWSE INCDIR(..\..\Libraries
                    -\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\..\
                    -..\DIANCI;..\..\..\..\18--------) DEBUG PRINT(.\Out_File\adc.lst) TABS(2) OBJECT(.\Out_File\adc.obj) 

stmt  level    source

    1          /*
    2           * @Author: lanchanghai
    3           * @Date: 2023-06-09 22:32:02
    4           * @LastEditors: lanchanghai
    5           * @LastEditTime: 2023-06-16 19:55:11
    6           * @FilePath: \DIANCI\Project\USER\src\adc.c
    7           */
    8          #include "headfile.h"
    9          
   10          
   11          
   12          //-------------------------------------------------------------------------------------------------------
             -------------
   13          //  @brief      ADCï¿½ï¿½Ê¼ï¿½ï¿½
   14          //  @param      adcn            
   15          //  @param      speed         
   16          //  @return     void
   17          //  Sample usage:   ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªADCï¿½ï¿½ï¿½ï¿½,ADCÊ±ï¿½ï¿½Æµï¿½Ê£ï¿½SYSclk/2
   18          //-------------------------------------------------------------------------------------------------------
             -------------
   19          /*
   20            0(1.0)  //1(1.1) 2(5.4) 3(1.3) 4(1.4) 5(1.5) 6(1.6) 7(1.7) 8(0.0) 9(0.1) 10(0.2) 
   21            11(0.3) 12(0.4) 13(0.5) 14(0.6)
   22          */
   23          void Use_adc_Init(void)
   24          {
   25   1        
   26   1      //  adc_init(ADC_P05, ADC_SYSclk_DIV_2);//ADCÍ¨ï¿½ï¿½13
   27   1        adc_init(ADC_P16, ADC_SYSclk_DIV_2);//6
   28   1        adc_init(ADC_P17, ADC_SYSclk_DIV_2);//7
   29   1        adc_init(ADC_P00, ADC_SYSclk_DIV_2);//8
   30   1        adc_init(ADC_P01, ADC_SYSclk_DIV_2);//9
   31   1        adc_init(ADC_P02, ADC_SYSclk_DIV_2);//10
   32   1        adc_init(ADC_P03, ADC_SYSclk_DIV_2);//11  
   33   1        
   34   1        
   35   1      }
   36          //-------------------------------------------------------------------------------------------------------
             -------------
   37          //  @brief      ADC×ªï¿½ï¿½Ò»ï¿½Î¶ï¿½Öµ
   38          //  @param      adcn            Ñ¡ï¿½ï¿½ADCÍ¨ï¿½ï¿½
   39          //  @param      resolution      ï¿½Ö±ï¿½ï¿½ï¿½
   40          //  @return     void
   41          //  Sample usage:               adc_convert(ADC_P10, ADC_10BIT);
   42          //-------------------------------------------------------------------------------------------------------
             -------------
   43          ///*ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¤ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½Ã£ï¿½Ö±ï¿½Ó¶ï¿½Î½ï¿½ï¿½Ðµï
             -¿½ï¿½ï¿½×ªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½*/DMAï¿½ï¿½ï¿½Ã¶ï¿½ï¿½ï¿½Ö±ï¿½ï¿½×ªï¿½ï¿½
   44          //void Read_adc_once(void)
   45          //{
   46          //   adc_data[0] = adc_once(ADC_P11,ADC_12BIT);
   47          //   adc_data[1] = adc_once(ADC_P13,ADC_12BIT);
   48          //   adc_data[2] = adc_once(ADC_P14,ADC_12BIT);
   49          //   adc_data[3] = adc_once(ADC_P15,ADC_12BIT);
   50          //   adc_data[4] = adc_once(ADC_P16,ADC_12BIT);
   51          //}
   52          //ï¿½ï¿½ï¿½ï¿½×ªï¿½ï¿½ï¿½ï¿½6ï¿½Î¸Ä³ï¿½8ï¿½ï¿½
C251 COMPILER V5.60.0,  adc                                                                20/06/23  00:03:58  PAGE 2   

   53          void shuju_adc(void)
   54          {
   55   1         uint8 i,n,j,x=0,y=0;
   56   1       
   57   1        if(DmaADCFlag)  //ï¿½Ð¶ï¿½ADC DMAï¿½ï¿½ï¿½ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½
   58   1          {
   59   2            bubble_sort();
   60   2            average_value();
   61   2            normalization();
   62   2            DmaADCFlag = 0; //ï¿½ï¿½ï¿½ï¿½ï¿½É±ï¿½Ö¾   
   63   2          
   64   2              y=0;
   65   2              OLED_ShowNum(0,0,16,2,12);  
   66   2              OLED_ShowNum(0,12,17,2,12); 
   67   2              OLED_ShowNum(0,24,00,2,12); 
   68   2              OLED_ShowNum(0,36,01,2,12); 
   69   2              OLED_ShowNum(0,48,02,2,12); 
   70   2              OLED_ShowNum(60,0,03,2,12);     
   71   2              OLED_ShowString(12,0,":",12);
   72   2              OLED_ShowString(12,12,":",12);  
   73   2              OLED_ShowString(12,24,":",12);  
   74   2              OLED_ShowString(12,36,":",12);  
   75   2              OLED_ShowString(12,48,":",12);  
   76   2              OLED_ShowString(72,0,":",12); 
   77   2            for(i=0; i<ADC_CH; i++)     //ï¿½ï¿½Ó¡Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Í¨ï¿½ï¿½ï¿½Ä²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½//5
   78   2            {
   79   3               if(i<5)  x=15;
   80   3              else  if(i==5) { x=78;y=0;}
   81   3              else y=0;
   82   3                    
   83   3              
   84   3              oled_printf_float(x,y,my_sqrt(normalization_result[i]),2,3,12);
   85   3                  OLED_Refresh();           
   86   3                y=y+12; 
   87   3                }
   88   2          
   89   2            
   90   2           DMA_ADC_TRIG();    //ï¿½ï¿½ï¿½Â´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½×ªï¿½ï¿½
   91   2        } 
   92   1      }
   93          
   94          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       393     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         2     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
